{"version":3,"file":"static/js/806.a4e545c2.chunk.js","mappings":"kRAEaA,EAAcC,EAAAA,GAAAA,GAAH,2GAOXC,EAAgBD,EAAAA,GAAAA,IAAH,gFAMbE,EAAaF,EAAAA,GAAAA,GAAH,mIAQVG,EAAeH,EAAAA,GAAAA,EAAH,yFAMZI,EAAaJ,EAAAA,GAAAA,EAAH,yF,SCuBvB,EAxCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA2BF,GAA3B,uEACE,IACQG,EAAWC,EAAAA,GAAeJ,GAChCH,EAAWM,GACXJ,GAAmB,EAKpB,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CATH,2CADc,yBAAC,SAAD,2BAYdC,CAAYT,EACb,GAAE,CAACA,IAEmB,IAAnBJ,EAAQc,QAAgBZ,GAExB,SAACP,EAAD,sDAKF,SAACF,EAAD,UACGO,EAAQe,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACtB,EAAD,YACE,UAACC,EAAD,sBAAuBoB,MACvB,SAACnB,EAAD,UAAaoB,MAFEF,EAKpB,KAGN,C,8LChDKG,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,mCAAG,6GAEPD,EAAAA,GAAAA,IAAA,qBAAgC,CACrDE,OAAQ,CACNC,QAASJ,KAJiB,cAExBZ,EAFwB,yBAOvBA,EAASiB,KAAKC,SAPS,gCAS9Bf,QAAQC,IAAR,MAT8B,yDAAH,qDAalBe,EAAY,mCAAG,WAAMtB,GAAN,gGAEDgB,EAAAA,GAAAA,IAAA,iBAAoBO,OAAOvB,IAAY,CAC5DkB,OAAQ,CACNC,QAASJ,KAJW,cAElBZ,EAFkB,yBAOjBA,EAASiB,MAPQ,gCASxBd,QAAQC,IAAR,MATwB,yDAAH,sDAaZiB,EAAO,mCAAG,WAAMZ,GAAN,gGAEII,EAAAA,GAAAA,IAAA,gBAAmBJ,EAAnB,YAAiC,CACtDM,OAAQ,CACNC,QAASJ,KAJM,cAEbZ,EAFa,yBAOZA,EAASiB,KAAKK,MAPF,gCASnBnB,QAAQC,IAAR,MATmB,yDAAH,sDAaPmB,EAAU,mCAAG,WAAMd,GAAN,gGAECI,EAAAA,GAAAA,IAAA,gBAAmBJ,EAAnB,YAAiC,CACtDM,OAAQ,CACNC,QAASJ,KAJS,cAEhBZ,EAFgB,yBAOfA,EAASiB,KAAKC,SAPC,gCAStBf,QAAQC,IAAR,MATsB,yDAAH,sDAaVoB,EAAgB,mCAAG,WAAMC,GAAN,gGAELZ,EAAAA,GAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,QAASJ,EACTa,MAAAA,KALwB,cAEtBzB,EAFsB,yBAQrBA,EAASiB,KAAKC,SARO,gCAU5Bf,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n`;\n\nexport const ReviewMessage = styled.div`\n  color: red;\n  font-weight: 700;\n  font-size: 15px;\n`;\n\nexport const ReviewItem = styled.li`\n  width: 100%;\n  border: 1px solid green;\n  padding: 10px;\n  border-radius: 10px;\n  list-style: none;\n`;\n\nexport const ReviewHeader = styled.p`\n  font-weight: 700;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewText = styled.p`\n  font-weight: 500;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport * as API from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport {\n  ListReviews,\n  ReviewMessage,\n  ReviewItem,\n  ReviewHeader,\n  ReviewText,\n} from 'components/Reviews/Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isReviewsLoaded, setIsReviewsLoaded] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadReviews(movieId) {\n      try {\n        const response = API.getReviews(movieId);\n        setReviews(response);\n        setIsReviewsLoaded(true);\n        // console.log(response);\n        // console.log(reviews);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadReviews(movieId);\n  }, [movieId]);\n\n  if (reviews.length === 0 && isReviewsLoaded) {\n    return (\n      <ReviewMessage>We don`t have any review of this movie</ReviewMessage>\n    );\n  }\n\n  return (\n    <ListReviews>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <ReviewHeader>Author: {author}</ReviewHeader>\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        );\n      })}\n    </ListReviews>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst API_KEY = 'fd6bb4af85e210e712557c20fca0d5b7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${Number(movieId)}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ListReviews","styled","ReviewMessage","ReviewItem","ReviewHeader","ReviewText","useState","reviews","setReviews","isReviewsLoaded","setIsReviewsLoaded","movieId","useParams","useEffect","response","API","error","console","log","message","loadReviews","length","map","id","author","content","API_KEY","axios","fetchTrendingToday","params","api_key","data","results","getMovieById","Number","getCast","cast","getReviews","getMovieBySearch","query"],"sourceRoot":""}